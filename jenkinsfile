pipeline {
    agent any
    tools {
        nodejs 'node.js'
    }
    environment {
        IMAGE_NAME = 'kamalesh25/yapster'
        IMAGE_TAG = "${BUILD_NUMBER}"
    }
    stages {
        stage('Git Repo Fetch') {
            steps {
                git branch: 'main', credentialsId: 'git-credentials', url: 'https://github.com/25kamalesh/YapOps.git'
            }
        }
        stage('Install Frontend Dependencies') {
            steps {
                dir('Frontend') {
                    script {
                        if (!fileExists('node_modules')) {
                            sh 'npm ci'
                        } else {
                            echo 'Dependencies already installed, skipping...'
                        }
                    }
                }
            }
        }
        stage('Run Frontend Tests') {
            steps {
                dir('Frontend') {
                    sh 'npm run test:run'
                }
            }
        }
        stage('Trivy Filesystem Scan') {
            steps {
                script {
                    sh '''
                        echo "üîç Scanning filesystem for vulnerabilities..."
                        trivy fs . \
                        --format table \
                        --exit-code 0 \
                        --severity LOW,MEDIUM,HIGH,CRITICAL \
                        --no-progress
                        
                        echo "üîç Scanning for HIGH and CRITICAL vulnerabilities only..."
                        trivy fs . \
                        --format json \
                        --output trivy-fs-report.json \
                        --exit-code 1 \
                        --severity HIGH,CRITICAL \
                        --no-progress
                    '''
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'trivy-fs-report.json', allowEmptyArchive: true
                }
            }
        }
        stage('Docker Build, Tag & Scan') {
            steps {
                script {
                    echo "üê≥ Building Docker image..."
                    sh """
                        docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
                        docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
                    """
                    
                    echo "üîç Scanning Docker image with Trivy..."
                    sh """
                        trivy image ${IMAGE_NAME}:${IMAGE_TAG} \
                        --format table \
                        --exit-code 0 \
                        --severity LOW,MEDIUM,HIGH,CRITICAL \
                        --no-progress
                        
                        trivy image ${IMAGE_NAME}:${IMAGE_TAG} \
                        --format json \
                        --output trivy-image-report.json \
                        --exit-code 1 \
                        --severity CRITICAL \
                        --no-progress
                    """
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'trivy-image-report.json', allowEmptyArchive: true
                }
            }
        }
        stage('Push to Docker Hub') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
                        sh "docker push ${IMAGE_NAME}:latest"
                    }
                }
            }
        }
    }
}